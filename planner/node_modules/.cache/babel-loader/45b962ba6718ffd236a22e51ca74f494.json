{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kangj\\\\Coding\\\\planner-app\\\\planner\\\\src\\\\components\\\\PlanModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlanModal(props) {\n  _s();\n\n  const [subject, setSubject] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [Alert1, setAlert1] = useState(false);\n  const [Alert2, setAlert2] = useState(false);\n\n  const Subject = event => {\n    setSubject(event.target.value);\n  };\n\n  const Content = event => {\n    setContent(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AddPlanModalBlack, {\n    children: /*#__PURE__*/_jsxDEV(AddPlanModalMain, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC77C\\uC815 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: \"100%\",\n        height: \"350px\",\n        children: [/*#__PURE__*/_jsxDEV(InputDiv, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uBD84\\uB958\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputPlan, {\n            height: \"40px\",\n            onChange: Subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), Alert1 === true ? /*#__PURE__*/_jsxDEV(Box, {\n          height: \"20px\",\n          children: /*#__PURE__*/_jsxDEV(AlertText, {\n            children: \"\\uBD84\\uB958\\uB97C \\uC785\\uB825\\uD558\\uC2ED\\uC2DC\\uC624\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(InputDiv, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uB0B4\\uC6A9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputPlan, {\n            height: \"100px\",\n            onChange: Content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), Alert2 === true ? /*#__PURE__*/_jsxDEV(Box, {\n          height: \"20px\",\n          children: /*#__PURE__*/_jsxDEV(AlertText, {\n            children: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC2ED\\uC2DC\\uC624\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlanBtn, {\n        onClick: () => {\n          if (subject === \"\") {\n            return setAlert1(true);\n          } else if (content === \"\") {\n            return setAlert2(true);\n          }\n\n          let newPlan = [...props.plan];\n          newPlan.unshift({\n            a: subject,\n            b: content\n          });\n          props.setPlan(newPlan);\n          props.setPlanModal(false);\n        },\n        children: \"\\uC800\\uC7A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlanBtn, {\n        color: \"#8ac1a7\",\n        onClick: () => {\n          props.setPlanModal(false);\n        },\n        children: \"\\uB2EB\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlanModal, \"Rjo2b95gkVc1O/G2Wwc06rQ8b+I=\");\n\n_c = PlanModal;\nconst AlertText = styled.p`\n    font-size: 5px;\n    color: rgb(219, 82, 82);\n    text-align: left;\n    margin-left: 80px;\n    margin-top: 5px;\n    letter-spacing: 3px;\n`;\n_c2 = AlertText;\nconst Box = styled.div`\n    width: ${props => props.width || \"auto\"};\n    height: ${props => props.height || \"auto\"};\n`;\n_c3 = Box;\nconst InputDiv = styled.div`\n    width: 100%;\n    display: flex;\n    label {\n        margin: 20px;\n        margin-bottom: 0;\n    }\n`;\n_c4 = InputDiv;\nconst InputPlan = styled.textarea`\n    margin: 10px;\n    margin-bottom: 0;\n    width: 70%;\n    height: ${props => props.height || \"auto\"};\n    resize: none;\n`;\n_c5 = InputPlan;\nconst AddPlanModalBlack = styled.div`\n    position: fixed;\n    width: 100vw;\n    height: 100vh;\n    z-index: 5;\n    background: rgba(0, 0, 0, 0.3);\n`;\n_c6 = AddPlanModalBlack;\nconst AddPlanModalMain = styled.div`\n    width: 70vw;\n    max-width: 500px;\n    height: 580px;\n    padding: 10px;\n    padding-top: 50px;\n    border-radius: 7px;\n    margin: 0 auto;\n    margin-top: 10vh;\n    background-color: #2c3333;\n    color: #faeee7;\n    text-align: center;\n    h1 {\n        margin-bottom: 40px;\n    }\n`;\n_c7 = AddPlanModalMain;\nconst PlanBtn = styled.button`\n    width: 40%;\n    height: 50px;\n    margin: 10px;\n    border-radius: 7px;\n    border: none;\n    background-color: ${props => props.color || \"#325288\"};\n    color: #faeee7;\n`;\n_c8 = PlanBtn;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"PlanModal\");\n$RefreshReg$(_c2, \"AlertText\");\n$RefreshReg$(_c3, \"Box\");\n$RefreshReg$(_c4, \"InputDiv\");\n$RefreshReg$(_c5, \"InputPlan\");\n$RefreshReg$(_c6, \"AddPlanModalBlack\");\n$RefreshReg$(_c7, \"AddPlanModalMain\");\n$RefreshReg$(_c8, \"PlanBtn\");","map":{"version":3,"sources":["C:/Users/kangj/Coding/planner-app/planner/src/components/PlanModal.js"],"names":["React","useEffect","useState","styled","PlanModal","props","subject","setSubject","content","setContent","Alert1","setAlert1","Alert2","setAlert2","Subject","event","target","value","Content","newPlan","plan","unshift","a","b","setPlan","setPlanModal","AlertText","p","Box","div","width","height","InputDiv","InputPlan","textarea","AddPlanModalBlack","AddPlanModalMain","PlanBtn","button","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nexport default function PlanModal(props) {\n    const [subject, setSubject] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [Alert1, setAlert1] = useState(false);\n    const [Alert2, setAlert2] = useState(false);\n\n    const Subject = (event) => {\n        setSubject(event.target.value);\n    };\n    const Content = (event) => {\n        setContent(event.target.value);\n    };\n\n    return (\n        <AddPlanModalBlack>\n            <AddPlanModalMain>\n                <h1>일정 추가</h1>\n                <Box width=\"100%\" height=\"350px\">\n                    <InputDiv>\n                        <label>분류</label>\n                        <InputPlan height=\"40px\" onChange={Subject} />\n                    </InputDiv>\n                    {Alert1 === true ? (\n                        <Box height=\"20px\">\n                            <AlertText>분류를 입력하십시오</AlertText>\n                        </Box>\n                    ) : null}\n\n                    <InputDiv>\n                        <label>내용</label>\n                        <InputPlan height=\"100px\" onChange={Content} />\n                    </InputDiv>\n                    {Alert2 === true ? (\n                        <Box height=\"20px\">\n                            <AlertText>내용을 입력하십시오</AlertText>\n                        </Box>\n                    ) : null}\n                </Box>\n                <PlanBtn\n                    onClick={() => {\n                        if (subject === \"\") {\n                            return setAlert1(true);\n                        } else if (content === \"\") {\n                            return setAlert2(true);\n                        }\n\n                        let newPlan = [...props.plan];\n                        newPlan.unshift({\n                            a: subject,\n                            b: content,\n                        });\n                        props.setPlan(newPlan);\n                        props.setPlanModal(false);\n                    }}\n                >\n                    저장\n                </PlanBtn>\n                <PlanBtn\n                    color=\"#8ac1a7\"\n                    onClick={() => {\n                        props.setPlanModal(false);\n                    }}\n                >\n                    닫기\n                </PlanBtn>\n            </AddPlanModalMain>\n        </AddPlanModalBlack>\n    );\n}\n\nconst AlertText = styled.p`\n    font-size: 5px;\n    color: rgb(219, 82, 82);\n    text-align: left;\n    margin-left: 80px;\n    margin-top: 5px;\n    letter-spacing: 3px;\n`;\n\nconst Box = styled.div`\n    width: ${(props) => props.width || \"auto\"};\n    height: ${(props) => props.height || \"auto\"};\n`;\nconst InputDiv = styled.div`\n    width: 100%;\n    display: flex;\n    label {\n        margin: 20px;\n        margin-bottom: 0;\n    }\n`;\nconst InputPlan = styled.textarea`\n    margin: 10px;\n    margin-bottom: 0;\n    width: 70%;\n    height: ${(props) => props.height || \"auto\"};\n    resize: none;\n`;\n\nconst AddPlanModalBlack = styled.div`\n    position: fixed;\n    width: 100vw;\n    height: 100vh;\n    z-index: 5;\n    background: rgba(0, 0, 0, 0.3);\n`;\n\nconst AddPlanModalMain = styled.div`\n    width: 70vw;\n    max-width: 500px;\n    height: 580px;\n    padding: 10px;\n    padding-top: 50px;\n    border-radius: 7px;\n    margin: 0 auto;\n    margin-top: 10vh;\n    background-color: #2c3333;\n    color: #faeee7;\n    text-align: center;\n    h1 {\n        margin-bottom: 40px;\n    }\n`;\nconst PlanBtn = styled.button`\n    width: 40%;\n    height: 50px;\n    margin: 10px;\n    border-radius: 7px;\n    border: none;\n    background-color: ${(props) => props.color || \"#325288\"};\n    color: #faeee7;\n`;\n"]},"metadata":{},"sourceType":"module"}